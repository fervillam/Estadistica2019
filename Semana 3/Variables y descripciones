##**Ejer:** ¿Que clase de objeto es BIC?
class(BIC)
#[1] "function"

#¿Qué clase de objeto es geospiza? use la función *str* para obtener información sobre la estructura.
str(geospiza)
#List of 4
 #$ geospiza.tree:List of 4
  ..$ edge       : num [1:26, 1:2] 15 16 17 18 19 20 21 22 23 24 ...
  ..$ edge.length: num [1:26] 0.2974 0.0492 0.0686 0.134 0.1035 ...
  ..$ Nnode      : int 13
  ..$ tip.label  : chr [1:14] "fuliginosa" "fortis" "magnirostris" "conirostris" ...
  ..- attr(*, "class")= chr "phylo"
 #$ geospiza.data: num [1:13, 1:5] 4.4 4.35 4.22 4.26 4.24 ...
  ..- attr(*, "dimnames")=List of 2
  .. ..$ : chr [1:13] "magnirostris" "conirostris" "difficilis" "scandens" ...
  .. ..$ : chr [1:5] "wingL" "tarsusL" "culmenL" "beakD" ...
 #$ phy          :List of 4
  ..$ edge       : num [1:26, 1:2] 15 16 17 18 19 20 21 22 23 24 ...
  ..$ edge.length: num [1:26] 0.2974 0.0492 0.0686 0.134 0.1035 ...
  ..$ Nnode      : int 13
  ..$ tip.label  : chr [1:14] "fuliginosa" "fortis" "magnirostris" "conirostris" ...
  ..- attr(*, "class")= chr "phylo"
 #$ dat          : num [1:13, 1:5] 4.4 4.35 4.22 4.26 4.24 ...
  ..- attr(*, "dimnames")=List of 2
  .. ..$ : chr [1:13] "magnirostris" "conirostris" "difficilis" "scandens" ...
  .. ..$ : chr [1:5] "wingL" "tarsusL" "culmenL" "beakD" ...
class(geospiza)
#[1] "list"
# como observamos geospiza es un objeto de la clase listas debido a que contiene
# diferentes clases 


#**Ejer:** ¿Qué tipo de variable es tarsusL y qué clase? 
 class(geospiza$geospiza.data[,2])
#[1] "numeric"
# tarsusL es un tipo de variable numeric

#Abra el objeto *tortues* y mire ¿Qué tipo de variables tiene y qué clase son?,
View(tortues)
class(tortues)
[1] "data.frame" # tortues es data.frame debido a que guarda los datos tabulares.

# Lo componen 4 variables 
# Las 3 primeras variables son de tipo cuantitativas continuas 
class(tortues$long)
[1] "numeric"# ya que contiene decimales 
class(tortues$larg)
[1] "numeric"
class(tortues$haut)
[1] "numeric"

# Y la ultima variable es de tipo cualitativa nominal debido a que no hay un orden establecido
class(tortues$sexe)
[1] "factor"

#haga lo mismo con el objeto *mite.env* y revise ¿Qué tipo de variable es *shurb* y qué clase es? Recuerde siempre usar help para saber de donde vienen los datos.

View(mite.env)
class(mite.env$Shrub)
[1] "ordered" "factor"
# Shrub es un tipo de variable cualitativa ordinal pues es la densidad de arbustos, un factor ordenado con niveles 1 <2 <3

#**Ejer:** usando el data.frame *tortues* calcule la proporción de hembras y machos de la muestra
View(tortues)

M <- length(which(tortues$sexe== "M"))
M
#[1] 24

F <- length(which(tortues$sexe == "F"))
F
#[1] 24

> paste(F,'/',M,sep = '')
#[1] "24/24"

> F/M
#[1] 1
#Como podemos observar es una poblacion de tortugas que tiene igual número de machos y hembras

#**Ejer:** usando el data.frame *tortues* calcule la proporción entre el ancho y el largo del caparazón,
#genere una tabla con la información de *tortues* y la nueva variable derivada.


long <- (tortues$long)
long

larg <- (tortues$larg)
larg

 medidas <- cbind(tortues$long,tortues$larg)
 tabla_medidas <- as.data.frame(cbind(paste('spp',sep = '_'),medidas))
 
 tabla_medidas
 
 #Para asignarle los nombres a las columnas
 colnames(tabla_medidas) <- c( "Individuos","long","larg")
 tabla_medidas
 
 #Realizamos la relacion del long/Larg
 prp<-long/larg
 prp 
 
  #Creamos la nueva tabla con la información de *tortues* y la nueva variable derivada que es la relacion entre long/larg
 Tabla_medidas_prp <- cbind.data.frame(tabla_medidas, prp)
 
 Tabla_medidas_prp 
  Individuos long larg      prp
1         spp   93   74 1.256757
2         spp   94   78 1.205128
3         spp   96   80 1.200000
4         spp  101   84 1.202381
5         spp  102   85 1.200000
6         spp  103   81 1.271605
7         spp  104   83 1.253012
8         spp  106   83 1.277108
9         spp  107   82 1.304878
10        spp  112   89 1.258427
11        spp  113   88 1.284091
12        spp  114   86 1.325581
13        spp  116   90 1.288889
14        spp  117   90 1.300000
15        spp  117   91 1.285714
16        spp  119   93 1.279570
17        spp  120   89 1.348315
18        spp  120   93 1.290323
19        spp  121   95 1.273684
20        spp  125   93 1.344086
21        spp  127   96 1.322917
22        spp  128   95 1.347368
23        spp  131   95 1.378947
24        spp  135  106 1.273585
25        spp   98   81 1.209877
26        spp  103   84 1.226190
27        spp  103   86 1.197674
28        spp  105   86 1.220930
29        spp  109   88 1.238636
30        spp  123   92 1.336957
31        spp  123   95 1.294737
32        spp  133   99 1.343434
33        spp  133  102 1.303922
34        spp  133  105 1.266667
35        spp  134  100 1.340000
36        spp  136  102 1.333333
37        spp  137   98 1.397959
38        spp  138   99 1.393939
39        spp  141  105 1.342857
40        spp  147  108 1.361111
41        spp  149  107 1.392523
42        spp  153  107 1.429907
43        spp  155  115 1.347826
44        spp  155  117 1.324786
45        spp  158  115 1.373913
46        spp  159  118 1.347458
47        spp  162  124 1.306452
48        spp  177  132 1.340909

 
 #**Ejer:** ¿Cuántas especies de *Corvus* fueron muestreadas en la región Paleártica-Africana? Use el data.frame del género *Corvus*.
 
 freq <- table(corvus$phylog)
freq 
###amer orien  pale ###
    6    13     9 
# Como observamos al hallar la frecuencia, fueron muestreadas 9 especies de corvus en la region Paleàrtica-Africana 

#¿Qué porcentaje de *Corvus* muestreados habitan zonas abiertas
freq1 <- table(corvus$habitat)
freq1
##clos open ##
  11   17 

# Fracción
prop.table(freq1)*100
# # clos     open # # 
39.28571 60.71429 
# Aproximadamente el 61% de *Corvus* muestreadas habitan en zonas abiertas 

#**Ejer:** ¿Cómo luce el gráfico de frecuencias para los tipos de hábitat del género *Corvus*?
plot(freq1, main= "Hábitat género *Corvus*", xlab= "Tipo de hábitat", ylab= "Frecuencia", col = "pink"


# Sumar las ocurrencias de cada especie
atlas$birds

xsp<- apply(atlas$birds,2,sum)

# Preguntar cuál es el mínimo 
min(xsp)
which.min(xsp)
xsp[which.min(xsp)]

# podríamos generar vectores
min(xsp)
x <- which.min(xsp)
xsp[x]


#**Ejer:** encuentre el máximo, así como lo hizo para el mínimo
max(xsp)
y <- which.max(xsp)
xsp[y]

#**Ejer:** Repita el ejercicio para las variables continuas de tamaño de pico y tamaño del ala en el género *Corvus*.
#Busque cómo cambiar colores, ejes y algunas propiedades que le permitan mejorar el diseño del histograma.


# Tamaño del pico 

range(corvus$bill)

#Como primer paso generamos las cajas 
caja1 <- seq(44,90,5)

# Segundo paso agrupar los datos en las cajas
datos<- cut(corvus$bill,caja1)

# Tercer paso generar una tabla de frecuencias
freq_bill <-table(datos)

# Posteriormente usamos transfrom para generar un data.frame de frecuencias
transform(freq_bill)


# Histograma de bill procedende de Corvus
hist(corvus$bill, breaks = caja1, main = "Longitud de los picos", col=rainbow(7), xlab = "Picos")


#Ahora con el tamaño del ala en el genero *Corvus*
range(corvus$wing)

#Como primer paso generamos las cajas 
bins <- seq(225,480, 25)

# Segundo paso agrupar los datos en las cajas

datos01 <- cut(corvus$wing,bins)



# Tercer paso generar una tabla de frecuencias
freq_wing <-table(datos01)

# Posteriormente usamos transfrom para generar un data.frame de frecuencias
transform(freq_wing)


# Histograma de bill procedende de Corvus

  hist(corvus$wing, breaks = bins, main = "Longitudes de alas del genero Corvus", xlab = "Longitud de alas (mm)",col = terrain.colors(7))

#Invente unos datos de medidas, como se hizo en el caso de los cráneos, 
#y genere todo el ejercicio hasta el histograma
  
Ancho <- rnorm(80, mean = 22, sd=1 )
Ancho

Largo <- rnorm(80,mean = 17,sd=1)
Largo

ALAS <- cbind(Largo,Ancho)
ALAS

#Relacion entre el largo/ancho
proporcion <- Largo/Ancho
proporcion

Tabla_ALAS <- cbind.data.frame(Largo,Ancho,proporcion)
Tabla_ALAS

range(Tabla_ALAS$proporcion)
caja2 <- seq(0.60,1,0.10)

hist(Tabla_ALAS$proporcion, breaks = caja2,main = "Proporcion largo/ancho de las alas ", xlab = "Largo/Ancho", col = "pink")



